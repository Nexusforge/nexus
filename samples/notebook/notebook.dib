#!markdown

# TODO
- add second y axis
- get unit and other properties from Nexus automatically

#!markdown

Add package source

#!csharp

// https://github.com/dotnet/interactive/issues/698
#i "nuget: file:///D:/Git/GitHub/nexusforge/nexus/artifacts/packages"
#r "nuget: Nexus.OpenApiClient, 1.0.0-beta.1"
#r "nuget: XPlot.Plotly.Interactive, 4.0.6"

#!markdown

Create client and authenticate

#!csharp

using Nexus.Client;

var client = new NexusOpenApiClient("https://localhost:8443");
await client.PasswordSignInAsync("test@nexus.localhost", "#test0/User1");

#!markdown

Get data from sample catalog `/IN_MEMORY/TEST/ACCESSIBLE`

#!csharp

using System.IO;

var begin = new DateTime(2020, 02, 01, 0, 0, 0, DateTimeKind.Utc);
var end = new DateTime(2020, 02, 02, 0, 0, 0, DateTimeKind.Utc);

var response = await client.Data
    .GetStreamAsync("/IN_MEMORY/TEST/ACCESSIBLE", "T1", "1_s_mean", begin, end);

var t1Data = response.Stream.AsSpan<double>().ToArray();

response = await client.Data
    .GetStreamAsync("/IN_MEMORY/TEST/ACCESSIBLE", "V1", "1_s_mean", begin, end);

var v1Data = response.Stream.AsSpan<double>().ToArray();

#!markdown

Plot data

#!csharp

using XPlot.Plotly;

var timestamps = Enumerable
    .Range(0, t1Data.Length)
    .Select(x => begin.AddSeconds(x))
    .ToArray();

var t1Scatter = new Scattergl{
    name = "Temperature 1",
    x = timestamps,
    y = t1Data.Select(value => value / 2)
};

var v1Scatter = new Scattergl{
    name = "Wind speed 1",
    x = timestamps,
    y = v1Data,
};

var chart = Chart.Plot(new[] { t1Scatter, v1Scatter });

chart.WithXTitle("date / time");
chart.WithYTitle("temperature in Â°C, wind speed in m/s");
chart.WithTitle("My chart");

chart.Display();
