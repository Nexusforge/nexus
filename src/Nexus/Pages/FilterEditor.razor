@page "/filter-editor"
@inherits StateComponentBase

<AuthorizeView>
    <Authorized>
        <div class="left-column">
            <div class="settings-box mat-elevation-z11">
                @if (this.AppState.IsDatabaseInitialized)
                {
                    <CodeDefinitionSettingsBox @ref="this.CodeDefinitionSettingsBox" CodeDefinition="this.UserState.CodeDefinition" OnSave="async () => await this.SaveCodeDefinitionAsync()" />

                    <div class="configuration-panel">

                        <div class="flex-row">
                            <div class="configuration-panel-hover fixed-width">
                                <div class="icon-button" @onclick="this.OpenGalleryDialog">
                                    <i class="fas fa-code"></i>
                                    <MatSubtitle2 class="clear-margin">Gallery</MatSubtitle2>
                                </div>
                            </div>

                            <div class="configuration-panel-hover fixed-width">
                                <div class="icon-button" @onclick="this.OpenFilterCreateDialog">
                                    <i class="fas fa-plus"></i>
                                    <MatSubtitle2 class="clear-margin">New</MatSubtitle2>
                                </div>
                            </div>

                            <div class="configuration-panel-hover fixed-width">
                                <div class="icon-button" @onclick="this.OpenFilterDeleteDialog">
                                    <i class="fas fa-minus"></i>
                                    <MatSubtitle2 class="clear-margin">Delete</MatSubtitle2>
                                </div>
                            </div>

                        </div>
                    </div>
                }
            </div>
            <CodeDefinitionGallery @bind-IsOpen="this.CodeDefinitionGalleryIsOpen" OnCodeDefinitionSelected="async (filter) => await this.CopyCodeDefinitionAsync(filter)" />
            <CodeDefinitionCreateModal @bind-IsOpen="this.CodeDefinitionCreateDialogIsOpen" OnCodeTypeSelected="this.PrepareCodeDefinition" />
            <CodeDefinitionDeleteModal @bind-IsOpen="this.CodeDefinitionDeleteDialogIsOpen" OnDelete="async () => await this.DeleteFilterAsync()" />
        </div>
        <div class="center-column monaco-editor-root-container">
            <div class="monaco-box mat-elevation-z11">
                <div id="monaco-editor" class="monaco-editor-container"></div>
            </div>
            <div class="diagnostics-box mat-elevation-z11">
                @if (this.Diagnostics is not null)
                {
                    @foreach (var diagnostic in this.Diagnostics)
                    {
                        <div>(@((diagnostic.Start.Line + 1) + ", " + (diagnostic.Start.Character + 1))): @diagnostic.Message</div>
                    }
                }
            </div>
        </div>
        <div class="right-column">
            <div class="selected-channel-box mat-elevation-z11">
                @if (this.AppState.IsDatabaseInitialized)
                {
                    @if (this.CodeDefinitions != null && this.CodeDefinitions.Any())
                    {
                        @foreach (var codeDefinition in this.CodeDefinitions)
                        {

                            <div class="codedefinition-item @(this.UserState.CodeDefinition.Id == codeDefinition.Id ? "active" : "")"
                                 @onclick="() => this.UserState.CodeDefinition = codeDefinition">
                                <MatIcon Icon="@Utilities.GetEnumIconName(codeDefinition.CodeType)"></MatIcon>&nbsp; @codeDefinition.Name
                            </div>
                        }
                    }
                    else
                    {
                        <div class="flex-centered h-100">
                            <MatSubtitle1>You have no filters created yet.</MatSubtitle1>
                        </div>
                    }
                }
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        You need to log in to access this page.
    </NotAuthorized>
</AuthorizeView>

@code {
    private CodeDefinitionSettingsBox CodeDefinitionSettingsBox { get; set; }
} 