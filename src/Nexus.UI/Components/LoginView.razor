@using System.Net
@inject IAppState AppState
@inject NavigationManager NavigationManager

@if (AppState.AuthenticationSchemes.Count > 1)
{
    <div class="flex-1 flex justify-center items-center">
        <div class="flex flex-col items-center w-72 rounded-md border border-gray-300 drop-shadow-2xl bg-white p-10">

            <span class="font-semibold text-2xl pb-2 text-cyan-800 mb-5 tracking-widest uppercase">Sign-in</span>

            <div class="flex flex-col gap-5">
                @foreach (var scheme in AppState.AuthenticationSchemes)
                {
                    <div class="flex justify-center px-10 py-2 text-xl text-cyan-700 border-b border-gray-300 hover:border-cyan-700 cursor-pointer">
                        <form action="/api/v1/users/authenticate">
                            <input type="hidden" name="scheme" value="@scheme.Scheme" /> 
                            <input type="hidden" name="returnUrl" value="@NavigationManager.Uri" /> 
                            <input class="cursor-pointer" type="submit" value="@scheme.DisplayName" />
                        </form>
                    </div>
                }
            </div>
        </div>
    </div>
}

@code {
    
    protected override void OnInitialized()
    {
        if (AppState.AuthenticationSchemes.Count == 1)
        {
            var scheme = AppState.AuthenticationSchemes.First();
            var url = $"/api/v1/users/authenticate?scheme={WebUtility.UrlEncode(scheme.Scheme)}&returnUrl={WebUtility.UrlEncode(NavigationManager.Uri)}";

            NavigationManager.NavigateTo(url, forceLoad: true);
        }
    }
}