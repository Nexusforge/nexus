@inject IAppState AppState

@page "/"
@page "/{catalogId}"

<PageTitle>Nexus</PageTitle>

<div class="flex flex-col h-full">

    <div class="h-72 p-4 flex flex-wrap">
        <div class="w-full sm:w-1/2 flex flex-col overflow-y-auto pr-0 sm:pr-2">
            <ResourceCatalogView Catalog="AppState.RootCatalog" />
        </div>
        <div class="w-full sm:w-1/2 pl-0 sm:pl-2">
            @if (AppState.SelectedCatalog is null || AppState.SelectedCatalog.GetType() == typeof(FakeResourceCatalogViewModel))
            {
                <div class="flex w-full h-full justify-center">
                    <span class="text-gray-400">no data available</span>
                </div>
            }
            else
            {
                <SelectedResourceCatalogView Catalog="AppState.SelectedCatalog" />
            }
        </div>
        
    </div>

    <div class="p-4 flex-1 min-h-0">
        @if (AppState.SelectedCatalog is null || AppState.SelectedCatalog.GetType() == typeof(FakeResourceCatalogViewModel))
        {
            <div class="w-full h-full flex justify-center items-center text-gray-400">
                <span class="mr-3 text-4xl mdi mdi-pac-man"></span>
                <span>no data available</span>
            </div>
        }
        else if (AppState.SelectedCatalog.Info.License is not null)
        {
            <div class="w-full h-full flex flex-col">
                <span class="w-full text-center font-bold text-cyan-700 text-2xl mb-2">License</span>
                <div class="overflow-y-auto border border-cyan-700 bg-white p-3 text-xl">
                    <MarkdownRenderer MarkdownString="@AppState.SelectedCatalog.Info.License"></MarkdownRenderer>
                </div>
                <div class="flex justify-center m-3">
                    <form action="/api/v1/users/accept-license">
                        <input type="hidden" name="catalogId" value="@AppState.SelectedCatalog.Id" /> 
                        <input class="w-20 p-1 rounded bg-cyan-700 flex justify-center items-center text-gray-200 cursor-pointer hover:bg-cyan-600" type="submit" value="Accept" />
                    </form>
                </div>
            </div>
        }
        </div>

</div>

@code {

    protected override Task OnParametersSetAsync()
    {
        return AppState.SelectCatalogAsync(CatalogId);
    }

    [Parameter]
    public string? CatalogId { get; set; }
}

