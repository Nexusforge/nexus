@inject NexusClient Client
@inject NavigationManager NavigationManager

@inherits LayoutComponentBase

<div class="page">

    <AuthorizeView>

        <Authorized>
            <div class="sidebar">
                <NavMenu />
            </div>

            <main>
                <div class="top-row px-4">
                    <span>Hello, @context.User.Identity!.Name!</span>
                    <form action="/api/v1/users/signout">
                        <input type="hidden" name="returnUrl" value="/" /> 
                        <input type="submit" value="Logout" />
                    </form>            
                </div>

                <article class="content px-4">
                    @Body
                </article>
            </main>
        </Authorized>

        <NotAuthorized>
            @if (_authenticationSchemes is null)
            {
                <span>Loading authentication schemes ...</span>
            }
            else
            {
                @foreach (var scheme in _authenticationSchemes)
                {
                    <form action="/api/v1/users/authenticate">
                        <input type="hidden" name="scheme" value="@scheme.Scheme" /> 
                        <input type="hidden" name="returnUrl" value="@NavigationManager.Uri" /> 
                        <input type="submit" value="Login via @scheme.DisplayName" />
                    </form>
                }
            }
        </NotAuthorized>

    </AuthorizeView>

</div>

@code {

    private ICollection<AuthenticationSchemeDescription> _authenticationSchemes { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        _authenticationSchemes = await Client.Users.GetAuthenticationSchemesAsync();
    }
}
